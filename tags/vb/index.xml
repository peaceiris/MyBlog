<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VB on Lucabol blog</title>
    <link>https://peaceiris.com/MyBlog/tags/vb/</link>
    <description>Recent content in VB on Lucabol blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Nov 2009 13:17:44 +0000</lastBuildDate>
    
	<atom:link href="https://peaceiris.com/MyBlog/tags/vb/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>My PDC session is online - “Future directions for C# and Visual Basic”</title>
      <link>https://peaceiris.com/MyBlog/posts/2009-11-23-my-pdc-session-is-online-future-directions-for-c-and-visual-basic/</link>
      <pubDate>Mon, 23 Nov 2009 13:17:44 +0000</pubDate>
      
      <guid>https://peaceiris.com/MyBlog/posts/2009-11-23-my-pdc-session-is-online-future-directions-for-c-and-visual-basic/</guid>
      <description>In case you are training to play the part of a first generation Italian immigrant in a Broadway show or if you want to understand why I never short msft stock: http://microsoftpdc.com/Sessions/FT11</description>
    </item>
    
    <item>
      <title>Luca at PDC 2009 next week</title>
      <link>https://peaceiris.com/MyBlog/posts/2009-11-13-luca-at-pdc-2009-next-week/</link>
      <pubDate>Fri, 13 Nov 2009 10:49:18 +0000</pubDate>
      
      <guid>https://peaceiris.com/MyBlog/posts/2009-11-13-luca-at-pdc-2009-next-week/</guid>
      <description>I’ll be in Los Angeles next week for PDC 2009. My session is called “Future Directions for C# and Visual Basic” and it comes on Tuesday immediately after the first keynote.
I’m planning on spending the first half of the session talking about the biggest trends influencing C# and VB. The second part will be about more future looking features we are playing with these days.
My deck has just two slides, as always.</description>
    </item>
    
    <item>
      <title>A version of the AsyncCache found its way into the Parallel Programming samples …</title>
      <link>https://peaceiris.com/MyBlog/posts/2009-05-21-a-version-of-the-asynccache-found-its-way-into-the-parallel-programming-samples/</link>
      <pubDate>Thu, 21 May 2009 13:28:13 +0000</pubDate>
      
      <guid>https://peaceiris.com/MyBlog/posts/2009-05-21-a-version-of-the-asynccache-found-its-way-into-the-parallel-programming-samples/</guid>
      <description>Go here to download them. It is in ParallelExtensionsExtrasCoordinationDataStructures. It has a slightly different design in that it returns Tasks. I’m trying to get Stephen to blog about it so that you can compare them.</description>
    </item>
    
    <item>
      <title>I talk about C# and VB Co-Evolution on Channel9 (and some F# …)</title>
      <link>https://peaceiris.com/MyBlog/posts/2009-05-14-i-talk-about-c-and-vb-co-evolution-on-channel9-and-some-f/</link>
      <pubDate>Thu, 14 May 2009 13:26:18 +0000</pubDate>
      
      <guid>https://peaceiris.com/MyBlog/posts/2009-05-14-i-talk-about-c-and-vb-co-evolution-on-channel9-and-some-f/</guid>
      <description>The title says it all. If you are interested, go here.</description>
    </item>
    
    <item>
      <title>An Async Html cache – part II – Testing the cache</title>
      <link>https://peaceiris.com/MyBlog/posts/2009-05-08-an-async-html-cache-part-ii-testing-the-cache/</link>
      <pubDate>Fri, 08 May 2009 11:34:00 +0000</pubDate>
      
      <guid>https://peaceiris.com/MyBlog/posts/2009-05-08-an-async-html-cache-part-ii-testing-the-cache/</guid>
      <description>Other posts:
 Part I – Writing the cache  Let’s try out our little cache. First I want to write a synchronous version of it as a baseline.
Private Shared Sub TestSync(ByVal sites() As String, ByVal sitesToDownload As Integer, ByVal howLong As Integer) Dim syncCache As New Dictionary(Of String, String) Dim count = sites.Count() Dim url1 = &#34;http://moneycentral.msn.com/investor/invsub/results/statemnt.aspx?Symbol=&#34; For i = 0 To sitesToDownload - 1 Dim html As String = &#34;</description>
    </item>
    
    <item>
      <title>An Async Html cache – Part I - Writing the cache</title>
      <link>https://peaceiris.com/MyBlog/posts/2009-04-27-an-async-html-cache-part-i-writing-the-cache/</link>
      <pubDate>Mon, 27 Apr 2009 19:57:00 +0000</pubDate>
      
      <guid>https://peaceiris.com/MyBlog/posts/2009-04-27-an-async-html-cache-part-i-writing-the-cache/</guid>
      <description>Other posts:
 Part II - Testing the cache  In the process of converting a financial VBA Excel Addin to .NET (more on that in later posts), I found myself in dire need of a HTML cache that can be called from multiple threads without blocking them. Visualize it as a glorified dictionary where each entry is (url, cachedHtml). The only difference is that when you get the page, you pass a callback to be invoked when the html has been loaded (which could be immediately if the html had already been retrieved by someone else).</description>
    </item>
    
  </channel>
</rss>